apiVersion: v1
kind: Namespace
metadata:
  name: starting-again
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qpp-ingress
  namespace: starting-again
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
spec:
  defaultBackend:
    service:
      name: web-1
      port:
        number: 80
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-1
            port:
              number: 80     
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-1
  namespace: starting-again
  labels:
    app: api-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-1
  template: 
    metadata: 
      labels:
        app: api-1
    spec:
      containers:
      - name: api-1
        image: gcr.io/starting-again-377302/api-1:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
---
kind: Service
apiVersion: v1
metadata:
  name: api-1
  namespace: starting-again
spec:
  selector:
    app: api-1
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-1
  namespace: starting-again
  labels:
    app: web-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-1
  template: 
    metadata: 
      labels:
        app: web-1
    spec:
      containers:
      - name: web-1
        image: gcr.io/starting-again-377302/web-1:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: web-1
  namespace: starting-again
spec:
  selector:
    app: web-1
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
