apiVersion: v1
kind: Namespace
metadata:
  name: starting-again
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-msal-config
  namespace: starting-again
data:
  MSAL_TENANT_URL: https://login.microsoftonline.com/consumers
  MSAL_CLIENT_ID: ef0f1a58-5d27-48f4-a47d-043df4ea4c3f
  MSAL_CLIENT_SECRET: HqN8Q~uAE.yQED1eb-2k_bnVXjCNwqojugqfFaSp
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-msal-config
  namespace: starting-again
data:
  VITE_API_URL: https://api.starting-again.info
  VITE_MSAL_CLIENT_ID: ef0f1a58-5d27-48f4-a47d-043df4ea4c3f
  VITE_MSAL_AUTHORITY: https://login.microsoftonline.com/consumers
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-cluster-issuer
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: selfsigned-certificate
  namespace: starting-again
spec:
  isCA: true
  commonName: tls-cert
  secretName: ingress-tls-secret
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: selfsigned-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
  subject:
    organizations:
      - Techstack Ltd
    organizationalUnits:
      - Devops
  dnsNames:
    - '*.starting-again.info'
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: starting-again
spec:
  ca:
    secretName: ingress-tls-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qpp-ingress
  namespace: starting-again
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/ingress.allow-http: 'true'
spec:
  tls:
    - hosts:
        - '*.atarting-again.info'
      secretName: ingress-tls-secret

  rules:
    - host: api.starting-again.info
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: noop
                port:
                  number: 3000
          - path: /api-1
            pathType: Prefix
            backend:
              service:
                name: api-1
                port:
                  number: 3000
          - path: /api-2
            pathType: Prefix
            backend:
              service:
                name: api-2
                port:
                  number: 3000
    - host: web-1.starting-again.info
      http:
        paths:
          - path: /?(.*) # solves content-type rewrite issue with non-html files
            pathType: Prefix
            backend:
              service:
                name: web-1
                port:
                  number: 3000
    - host: web-2.starting-again.info
      http:
        paths:
          - path: /?(.*) # solves content-type rewrite issue with non-html files
            pathType: Prefix
            backend:
              service:
                name: web-2
                port:
                  number: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-1
  namespace: starting-again
  labels:
    app: api-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-1
  template:
    metadata:
      labels:
        app: api-1
    spec:
      containers:
        - name: api-1
          image: api-1
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: api-msal-config
---
kind: Service
apiVersion: v1
metadata:
  name: api-1
  namespace: starting-again
spec:
  selector:
    app: api-1
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-2
  namespace: starting-again
  labels:
    app: api-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-2
  template:
    metadata:
      labels:
        app: api-2
    spec:
      containers:
        - name: api-2
          image: api-2
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: api-msal-config
---
kind: Service
apiVersion: v1
metadata:
  name: api-2
  namespace: starting-again
spec:
  selector:
    app: api-2
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-1
  namespace: starting-again
  labels:
    app: web-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-1
  template:
    metadata:
      labels:
        app: web-1
    spec:
      containers:
        - name: web-1
          image: web-1
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: web-msal-config
---
kind: Service
apiVersion: v1
metadata:
  name: web-1
  namespace: starting-again
spec:
  selector:
    app: web-1
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-2
  namespace: starting-again
  labels:
    app: web-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-2
  template:
    metadata:
      labels:
        app: web-2
    spec:
      containers:
        - name: web-2
          image: web-2
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: web-msal-config
---
kind: Service
apiVersion: v1
metadata:
  name: web-2
  namespace: starting-again
spec:
  selector:
    app: web-2
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noop
  namespace: starting-again
  labels:
    app: noop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: noop
  template:
    metadata:
      labels:
        app: noop
    spec:
      containers:
        - name: noop
          image: noop
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: api-msal-config
---
kind: Service
apiVersion: v1
metadata:
  name: noop
  namespace: starting-again
spec:
  selector:
    app: noop
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
